#!/bin/bash -e

NVM_VERSION="0.38.0"
NODE_VERSION="14.17.0"
RUBY_VERSION="3.0.1"
GO_VERSION="1.16.4"

echo "--------------------------------"
echo "Installing Dependencies"
echo "--------------------------------"
sudo apt-get update && sudo apt-get upgrade -y

sudo apt-get install -y \
  apt-transport-https \
  autoconf \
  automake \
  bison \
  build-essential \
  ca-certificates \
  curl \
  git \
  gnupg \
  gnupg-agent \
  gpg \
  keychain \
  libc6-dev \
  libssl-dev \
  libtool \
  libxml2-dev \
  libyaml-dev \
  openssl \
  silversearcher-ag \
  software-properties-common \
  tmux \
  tree \
  unzip \
  vim \
  zlib1g \
  zlib1g-dev \
  zsh

echo "--------------------------------"
echo "Installing Docker"
echo "--------------------------------"
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository \
  "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) \
  stable"
sudo apt-get update && sudo apt-get install -y docker-ce docker-ce-cli

echo "--------------------------------"
echo "Installing Node"
echo "--------------------------------"
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v$NVM_VERSION/install.sh | bash
source ~/.nvm/nvm.sh
nvm install $NODE_VERSION

echo "--------------------------------"
echo "Installing Ruby"
echo "--------------------------------"
gpg --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
curl -sSL https://get.rvm.io | bash -s stable
source ~/.rvm/scripts/rvm
rvm install $RUBY_VERSION
rvm docs generate-ri
gem update --system

echo "--------------------------------"
echo "Installing Go"
echo "--------------------------------"
curl -L -o /tmp/go$GO_VERSION.tar.gz https://golang.org/dl/go$GO_VERSION.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf /tmp/go$GO_VERSION.tar.gz
rm /tmp/go$GO_VERSION.tar.gz

echo "--------------------------------"
echo "Installing Oh My Zsh"
echo "--------------------------------"
if [[ -d ~/.oh-my-zsh ]]; then
  echo "WARN: Oh My Zsh directory exists at ~/.oh-my-zsh, skipping..."
else
  curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh
fi

echo "--------------------------------"
echo "Installing Tmuxinator"
echo "--------------------------------"
gem install tmuxinator

echo "--------------------------------"
echo "Installing Vim Plugins"
echo "--------------------------------"
if [[ -d ~/.vim/autoload ]] || [[ -d ~/.vim/bundle ]]; then
  echo "WARN: Autoload and Bundle directories already exist under ~/.vim, skipping..."
else
  mkdir -p ~/.vim/autoload ~/.vim/bundle
  curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
  git clone https://github.com/lilydjwg/colorizer ~/.vim/bundle
  git clone https://github.com/scrooloose/nerdtree.git ~/.vim/bundle/nerdtree
  git clone https://tpope.io/vim/surround.git ~/.vim/bundle/surround
fi

echo "--------------------------------"
echo "Installing git-secret"
echo "--------------------------------"
sudo sh -c "echo 'deb https://gitsecret.jfrog.io/artifactory/git-secret-deb git-secret main' >> /etc/apt/sources.list"
wget -qO - 'https://gitsecret.jfrog.io/artifactory/api/gpg/key/public' | sudo apt-key add -
sudo apt-get update && sudo apt-get install -y git-secret

echo "--------------------------------"
echo "Installing git-chglog"
echo "--------------------------------"
go get -u github.com/git-chglog/git-chglog/cmd/git-chglog

echo "--------------------------------"
echo "Copying Files"
echo "--------------------------------"
#cp tmux/sysinfo.sh /usr/bin ##Removed temporarily until the script is fixed for WSL 2.
sudo cp tmux/.tmux.conf ~/.tmux.conf
sudo mkdir -p ~/.tmuxinator && sudo cp tmuxinator/erhbg.yml ~/.tmuxinator/erhbg.yml
sudo cp vim/.vimrc ~/.vimrc
sudo mkdir -p ~/.oh-my-zsh/themes && sudo cp zsh/erhbg.zsh-theme ~/.oh-my-zsh/themes/erhbg.zsh-theme
sudo cp zsh/.zshrc ~/.zshrc
sudo mkdir -p ~/.dir_colors && sudo cp zsh/dircolors.256darksolarized ~/.dir_colors/dircolors.256darksolarized

echo "--------------------------------"
echo "System has been bootstrapped successfully, Happy Hacking!"
echo "--------------------------------"
